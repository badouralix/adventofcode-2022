name: CI

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      days:
        description: Run specific days (space delimiter)
        required: true

env:
  INPUTS_DAYS: ${{ github.event.inputs.days }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v1

    # Install missing language compilers and interpreters
    # The default image natively supports bash, c/c++, dotnet, go, java, julia, python, ruby, rust
    # For new languages, see https://github.com/actions/runner-images/blob/5dd62e7/images/linux first

    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    # - uses: jiro4989/setup-nim-action@v1
    #   with:
    #     nim-version: 1.4.8
    - uses: goto-bus-stop/setup-zig@v2
      with:
        version: 0.10.0
    - uses: vlang/setup-v@v1
      with:
        version: 0.3.2

    # Install python packages if not cached
    - name: cache-python
      uses: actions/cache@v3
      id: cache-python
      with:
        path: ~/.local/lib/python3.10/site-packages
        key: ${{ runner.os }}-${{ hashFiles('requirements.txt') }}
    - name: deps-python
      if: steps.cache-python.outputs.cache-hit != 'true'
      run: sudo apt-get install python3-setuptools && python3 -m pip install --user wheel && python3 -m pip install --user -r requirements.txt

    # Install rust if not cached TODO
    # - name: cache-cargo
    #   uses: actions/cache@v3
    #   id: cache-cargo
    #   with:
    #     path: ~/.cargo/.bin
    #     key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
    # - name: deps-cargo
    #   if: steps.cache-cargo.outputs.cache-hit != 'true'
    #   run: curl https://sh.rustup.rs -sSf -o rustup.sh && sh rustup.sh -y

    # Build
    - name: Build
      run: ./build.sh
